"""
Django settings for manageapp project.
Generated by 'django-admin startproject' using Django 5.1.5.
"""

import os
from pathlib import Path

# Nếu chưa cài PyMySQL, pip install pymysql
import pymysql
pymysql.install_as_MySQLdb()

BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-bp0r!hvh2^c@-!tsghkqhz_6hk-2_)c^c6c+c*&wwbevs3#9x-'

DEBUG = True

# Nên thêm '127.0.0.1' và 'localhost' vào ALLOWED_HOSTS khi dev
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# Ứng dụng Django + Bên thứ 3 + App cục bộ
INSTALLED_APPS = [
    # 1) Django apps mặc định
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 2) Bên thứ 3
    'rest_framework',
    'oauth2_provider',
    'drf_yasg',  # Dùng cho swagger

    # 3) Ứng dụng của bạn
    'manageapp',
    'manages',
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # Sử dụng OAuth2 cho xác thực
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    # Có thể thêm pagination, filter, versioning, v.v. ở đây
}

# Nếu muốn cấu hình OAUTH2_PROVIDER chi tiết:
OAUTH2_PROVIDER = {
    # Trả JSON thay vì form HTML khi invalid client
    'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore'
}
# CLIENT_ID, CLIENT_SECRET (nếu cần cứng trong settings)
# CLIENT_ID = "..."
# CLIENT_SECRET = "..."

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # Nếu dùng django-cors-headers, thêm 'corsheaders.middleware.CorsMiddleware' ở đây
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'manageapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # Nếu cần render template, thêm thư mục template
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'manageapp.wsgi.application'

# Kết nối MySQL
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'managedb',  # Tên database
        'USER': 'root',      # Tài khoản MySQL
        'PASSWORD': 'Admin@123',  # Mật khẩu MySQL
        'HOST': '127.0.0.1', # Hoặc '' nếu chạy local
        'PORT': '3306',      # Cổng MySQL mặc định
    }
}

# Sử dụng User custom trong app manages
AUTH_USER_MODEL = 'manages.User'

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Ngôn ngữ, múi giờ
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'   # Hoặc 'Asia/Ho_Chi_Minh' nếu cần
USE_I18N = True
USE_TZ = True

# File tĩnh
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
